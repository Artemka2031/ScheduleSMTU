from aiogram.utils.markdown import hbold
from datetime import datetime, timedelta
from ORM.schedule_information import Weekday, WeekType


def format_schedule(sorted_schedule: dict, week_type: str) -> str:
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    formatted_schedule = f"{hbold('–ù–µ–¥–µ–ª—è:')} {week_type}\n\n"

    for day, day_schedule in sorted_schedule.items():

        if week_type == WeekType.get_current_week():
            weekday = Weekday.get_weekday_id(day)
        else:
            weekday = Weekday.get_weekday_id(day) + 7

        id_current_weekday = Weekday.get_weekday_id(Weekday.get_today())

        current_weekday = datetime.today() + timedelta(days=weekday - id_current_weekday)

        formatted_schedule += (f"–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {hbold(day)}\n"
                               f"–î–∞—Ç–∞: {hbold(current_weekday.strftime('%d.%m.%Y'))}\n\n")

        for pair_data in day_schedule:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞—Ä–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π –Ω–µ–¥–µ–ª–µ
            if pair_data['–ù–µ–¥–µ–ª—è'] == week_type or pair_data['–ù–µ–¥–µ–ª—è'] == '–û–±–µ –Ω–µ–¥–µ–ª–∏':
                pair = pair_data['–î–∞–Ω–Ω—ã–µ –ø–∞—Ä—ã']
                formatted_schedule += f"üîπ {pair['–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞']}-{pair['–í—Ä–µ–º—è –∫–æ–Ω—Ü–∞']} "
                formatted_schedule += f"{hbold(pair['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞'])} "
                formatted_schedule += f"({pair['–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è']})\n"
                if pair['–§–∞–º–∏–ª–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è']:
                    formatted_schedule += f"–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {hbold(pair['–§–∞–º–∏–ª–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è'])} " \
                                          f"{hbold(pair['–ò–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è'][:1] + '.' + pair['–û—Ç—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è'][:1])}.\n"
                formatted_schedule += f"–ê—É–¥–∏—Ç–æ—Ä–∏—è: {pair['–ö–æ—Ä–ø—É—Å']} {pair['–ù–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏']}\n\n"

    return formatted_schedule


def format_dual_week_schedule(sorted_schedule: dict) -> str:
    # def temp(pair_data):
    #     print(pair_data)
    #     pass

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    formatted_schedule = ""

    for day, day_schedule in sorted_schedule.items():
        formatted_schedule += f"–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {hbold(day)}\n\n"

        # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–∞—Ä, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤—ã–≤–µ–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        displayed_times = set()

        for pair_data in day_schedule:
            # temp(pair_data)
            pair = pair_data['–î–∞–Ω–Ω—ã–µ –ø–∞—Ä—ã']
            week_type = pair_data['–ù–µ–¥–µ–ª—è']
            pair_time = pair['–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞']

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ —É–∂–µ –≤—ã–≤–µ–¥–µ–Ω–æ –≤—Ä–µ–º—è –¥–ª—è –¥–∞–Ω–Ω–æ–π –ø–∞—Ä—ã
            if pair_time not in displayed_times:
                # –í—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –ø–∞—Ä—ã —Å —Å–∏–º–≤–æ–ª–æ–º üîπ
                formatted_schedule += f"üîπ {pair_time}-{pair['–í—Ä–µ–º—è –∫–æ–Ω—Ü–∞']}\n"
                # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –≤ —Å–ø–∏—Å–æ–∫ —É–∂–µ –≤—ã–≤–µ–¥–µ–Ω–Ω—ã—Ö
                displayed_times.add(pair_time)

            # –ü–∏—à–µ–º –≤ –∫–∞–∫—É—é –Ω–µ–¥–µ–ª—é –±—É–¥–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ø–∞—Ä–∞
            formatted_schedule += f"{hbold(week_type)}:\n"

            # –ü–∏—à–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–∞—Ä–µ
            formatted_schedule += f"{pair['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞']} "
            formatted_schedule += f"({pair['–¢–∏–ø –∑–∞–Ω—è—Ç–∏—è']})\n"

            if pair['–§–∞–º–∏–ª–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è']:
                formatted_schedule += f"–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {pair['–§–∞–º–∏–ª–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è']}. "
                formatted_schedule += f"{pair['–ò–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è'][:1]}. "
                formatted_schedule += f"{pair['–û—Ç—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è'][:1]}.\n"
            formatted_schedule += f"–ê—É–¥–∏—Ç–æ—Ä–∏—è: {pair['–ö–æ—Ä–ø—É—Å']} {pair['–ù–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏']}\n\n"

    return formatted_schedule
