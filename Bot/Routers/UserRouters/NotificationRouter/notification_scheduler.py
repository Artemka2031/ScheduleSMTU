from datetime import datetime

from aiogram.utils.markdown import hbold
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from Bot.Routers.UserRouters.ScheduleRouter.ScheduleRouters.format_functions import format_schedule
from Bot.bot_initialization import bot
from ORM.Tables.SceduleTables.group_schedule import GroupSchedule
from ORM.Tables.SceduleTables.time_tables import Weekday, WeekType
from ORM.Tables.UserTables.notification_table import Notification
from ORM.Tables.UserTables.user_table import User


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
async def send_notifications():
    current_hour = datetime.now().hour   # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Å
    notifications = Notification.get_all_notifications()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    for user_id, notification_time in notifications.items():
        if int(notification_time) == current_hour:
            group_number = User.get_group_number(user_id)

            today = Weekday.get_today()

            if today == "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":
                await bot.send_message(text="–°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π! üéâ", chat_id=user_id)
                return

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏
            sorted_schedule = GroupSchedule.get_schedule(group_number, today)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
            if sorted_schedule:

                week_type = WeekType.get_current_week()
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                formatted_schedule = format_schedule(sorted_schedule, week_type)
                await bot.send_message(text=f"{hbold(f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ {group_number}')}:\n\n{formatted_schedule}",
                                               chat_id=user_id)
            else:
                await bot.send_message(text="–ò–∑–≤–∏–Ω–∏—Ç–µ, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", chat_id=user_id)


# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
async def notification_scheduler():
    scheduler = AsyncIOScheduler()
    for hour in range(0, 10):
        scheduler.add_job(send_notifications, 'cron', hour=hour, minute=0)
    scheduler.start()



